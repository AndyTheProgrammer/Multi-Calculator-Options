export const CALCULATORS = {
  rectangleArea: "Rectangular Area",
  parallelogramArea: "Parallelogram Area",
  ellipseArea: "Ellipse Area",
  trapezoidArea: "Trapezoid Area",
  triangleArea: "Triangle Area",
  circleArea: "Circle Area",
  sectorArea: "Sector Area",

  ballSurfArea: "Ball Surface Area",
  coneSurfArea: "Cone Surface Area",
  cubeSurfArea: "Cube Surface Area",
  cylindricalTankSurfArea: "Cylindrical Tank Surface Area",
  sphericalCapSurfArea: "Spherical Cap Surface Area",
  capsuleSurfArea: "Capsule Surface Area",
  conicalFrustrumSurfArea: "Conical Frustrum Surface Area",
  squarePyramidSurfArea: "Square Pyramid Surface Area",
  ellipsoidSurfArea: "Ellipsoid Surface Area",

  sphereVol: "Sphere Volume",
  coneVol: "Cone Volume",
  cubeVol: "Cube Volume",
  cylinderVol: "Cylinder Volume",
  rectangularTankVol: "Rectangular Tank Volume",
  capsuleVol: "Capsule Volume",
  sphericalCapVol: "Spherical Cap Volume",
  squarePyramidVol: "Square Pyramid Volume",
  ellipsoidVol: "Ellipsoid Volume",
  tubeVol: "Tube Volume",
  conicalFrustrumVol: "Conical Frustrum Volume",

  bodyMassIndex: "Body Mass Index",
  leanBodyMass: "Lean Body Mass",
  regularCycleOvulation: "Ovulation Calculator",
  leanBodyMassPetersFormula: "Lean Body Mass Peter's Formula",
  bodyMassIndexMethodTwo: "BMI Method Two",
  bmrKatchMcArdle: "Katch-McArdle Formula",
  bloodAlcoholContent: "Blood Alcohol Content",
  usCustomarySystemBfc: "US Customary System BFC",
  internationalSystemBfc: "International System BFC",
  bodyFatPercentageBmi: "Body Fat Percentage",
  dueDateNaegeleRule: "Naegele Rule",
  peroidCalculator: "Peroid Calculator",
  dueDateMittendorfWilliam: "Mittendorf William",
  duBoisBodySurfaceArea: "DuBois Body Surface Area",
  bodySurfaceArea: "Body Surface Area",
  mostellerBodySurfaceArea: "Mosteller Body Surface Area",
  haycockBodySurfaceArea: "Haycock Body Surface Are",
  gehanAndGeorgeSurfaceArea: "Gehan And George Surface Area",
  boydFormulaSurfaceArea: "Boyd Formula Surface Area",
  takahiraBodySurfaceArea: "Takahira Body Surface Area",
  takaSchlichBodySurfaceArea: "Schlich Body Surface Area",
  slopeCalculatorWithASingleKnownPoint: "Single Known Point",
  probabilityOfASeriesOfIndpendentEvents: "Series of Indpendent Events",

  marginOfError: "Margin of Error",
  sampleSize: "Sample Size",
  probablityOfTwoEvents: "Of Two Events",
  probablitySolverForTwoEvents: "Solver For Two Events",

  concreteSquareFooting: "Concrete Square Footing",
  circularSlab: "Circular Slap",
  curbAndGutterBarrier: "Curb And Gutter Barrier",
  stairsConcrete: "Stairs Concrete",
  holeColumn: "Hole Column",
  slopeCalculatorForTwoKnownPoints: "Two Known Points",
  elapsedTimeMethod: "Elapsed Time Method",
  trapSpeedMethod: "Trap Speed Method",
  parrallelResitor: "Parrallel Resitor",
  seriesResistor: "Series Resistor",
  conductorResitor: "Conductor Resitor",
  horsepowerCalculation: "Horsepower",
  websiteBandwidth: "Website Bandwidth",
  hostingBandwidth: "Hosting Bandwidth",
  fujimotoFormulaSurfaceArea: "Fujimoto Formula Surface Area",
  dueDateParikhsRule: "Parikh's Rule",
  dueDateWoodsRule: "Woods Rule",
  bmrMifflinStJeorEquation: "Mifflin-St Jeor Equation",
  bmrHarrisBenedict: "Harris-Benedict Equation",

  amortizedLoan: "Amortized Loan",
  bondPayBackPredetermined: "Bond",
  deferredPaymentsLoan: "Deferred Payment Loan",
  inflationCalculatorCpiData: "Inflation Calculator CPI Data",
  mortgagePayoffWithLoanTerm: "Mortgage Payoff With Loan Term",
  mortgagePayOffWithoutLoanTerm: "Mortgage Payoff Without Loan Term",
  payBackACertainAmount: "PayBack a Certain Amount",
  paybackWithinTimeFrame: "Payback Within Timeframe",
  presentValue: "Present Value",
  presentValueOfPeriodicalDeposit:
    "Present Value of Periodical Deposit",
  profitMargin: "Profit Margin",
  stockTradingMargin: "Stock Trading Margin",
};

export const BUTTONS = {
  calculate: "Calculate",
  clear: "Clear",
};

export const PLACEHOLDERS = {
  unit: "Unit",
  number: "0",
  gender: "Gender",
  type: "Type",
  method: "Method",
  date: "Date",
  search: "Search here...",
};

export const LABELS = {
  radius: "Radius",
  baseRadius: "Base Radius",
  topRadius: "Top Radius",
  bottomRadius: "Bottom Radius",
  ballRadius: "Ball Radius",
  axis: "Axis",
  axis1: "Axis1",
  axis2: "Axis2",
  axis3: "Axis3",
  unit: "Unit",
  length: "Length",
  width: "Width",
  edgeLength: "Edge Length",
  baseEdge: "Base Edge",
  height: "Height",
  weight: "Weight",
  mass: "Mass",
  days: "Days",
  cycleDays: "Cycle Days",
  date: "Date",
  previousCycleStartDate: "Previous Cycle Start Date",
  gender: "Gender",
  populationSize: "Population Size",
  populationMean: "Population Mean",
  confidenceLevel: "Confidence Level",
  marginOfError: "Margin of Error",
  populationProportion: "Population Proportion",
  sampleProportion: "Sample Proportion",
  populationStandardDeviation: "Population Standard Deviation",
  sampleStandardDeviation: 'Sample Standard Deviation',
  populationVariance: "Population Variance",
  sampleVariance: "Sample Variance",
  sampleSize: "Sample Size",
  breadth: "Breadth",
  semiMajorAxesA: "Semi Major Axes A",
  semiMajorAxesB: "Semi Major Axes B",
  base: "Base",
  base1: "Base 1",
  base2: "Base 2",
  sideA: "Side A",
  sideB: "Side B",
  sideC: "Side C",
  angle: "Angle",
  outerDiameter: "Outer Diameter",
  innerDiameter: "Inner Diameter",
  quantity: "Quantity",
  curbDepth: "Curb Depth",
  curbHeight: "Curb Height",
  flagThickness: "Flag Thickness",
  gutterWidth: "Gutter Width",
  run: "Run",
  rise: "Rise",
  platformDepth: "Platform Depth",
  steps: "Steps",
  diameter: "Diameter",
  months: "Months",
  interestRate: "Interest Rate",
  year: "Year",
  creditCardBalance: "Credit Card Balance",
  totalPaymentsperYear: "Total Payments",
  paymentsMade: "Payments Made",
  loanAmount: "Loan Amount",
  monthlyPayment: "Monthly Payment",
  principalBalance: "Principal Balance",
  presentValue: "Present Value",
  numberOfMonths: "Number of Months",
  numberOfYears: "Number of Years",
  predeterminedAmount: "Predetermined Amount",
  periodDeposit: "Peroid Deposit",
  salesRevenue: "Sales Revenue",
  cost: "Cost",
  marginRequirement: "Margin Requirement",
  stockPrice: "Stock Price",
  shares: "Shares",
  currentPrice: "Current Price",
  priceInBase: "Price in Base",
  fat: "Fat",
  hoursOfDrinking: "Hours of Drinking",
  minutesOfDrinking: "Minutes of Drinking",
  numberOfStandardDrinks: "Number of Standard Drinks",
  neck: "Neck",
  abdomen: "Abdomen",
  hip: "Hip",
  waist: "Waist",
  age: "Age",
  firstDateofLastPeriod: "First Data of Last Period",
  method: "Method",
  lastPeriodDays: "Last Period Days",
  cycleLength: "Cycle Length",
  y1: "Y 1",
  y2: "Y 2",
  distance: "Distance",
  x1: "X 1",
  x2: "X 2",
  slope: "Slope",
  eventA: "Event A",
  eventB: "Event B",
  aRepeatTimes: "A Repeat Times",
  bRepeatTimes: "B Repeat Times",
  type: "Type",
  time: "Time",
  speed: "Speed",
  resistanceValues: "Resistance Values",
  redundancyFactor: "Redundancy Factor",
  conductivity: "Conductivity",
  force: "Force",
  pageViews: "Page Views",
  pageSize: "Page Size",
  monthlyUsage: "Monthly Usage",
  probabilityOfA: "Probability of A",
  probabilityOfB: "Probability of B",
  probabilityOfANotOccuring: "Probability of A not Occuring",
  probabilityOfBNotOccuring: "Probability of B not Occuring",
  probabilityOfAAndBBothOccuring: "Probability of A and B both Occuring",
  probabilityThatAOrBOrBothOccur: "Probability that A or B or both Occur",
  probabilityOfNeitherANorBOccuring: "Probability of Neither A nor B Occuring",
  probabilityThatAOrBOccursButNotBoth:
    "Probability that A or B Occurs but not both",
  vector: 'Vector',
};

export const IDS = {
  length: "length",
  w: "width",
};

export const INPUT_TYPE = {
  email: "email",
  radio: "radio",
  text: "text",
  number: "number",
  button: "button",
  date: "date",
  range: "range",
  submit: "submit",
};

export const COLORS = {
  gradient: "linear-gradient(90deg, #3128AF 0%, #499FB8 100%)",
  primary: "#4072B5",
  secondary: "#e4e4e4",
  light_text_color: "#F0ECEC",
  background: "linear-gradient(90deg, #fbfbfb 0%, #d1d1d1 100%)",
  gradientBackground: "linear-gradient(90deg, #fbfbfb 0%, #d1d1d1 100%)",
  paper_background: "#A8A79F",
  text: "#3267ac",
  onGradient: "#ffffff",
  input: "#dde9ec"
};

export const CALC_LABELS = {
  math: "| Math Calculators",
  finance: "| Financial Calculators",
  health: "| Fitness & Health Calculators",
  statistics: "| Statistical Calculators",
  other: "| Other Calculators",
};

export const LATEX = {
  cirleArea: `$A = \\pi r^{2}$`,
  rectangleArea: `$A = lw$`,
  triangleArea: `$A = \\frac{1}{2}bh$`,
  trapezoidArea: `$A = \\frac{1}{2}(x_1 + x_2 )h$`,
  sectorArea: `$A = \\frac{{\\theta r^2 }}{2}$`,
  ellipseArea: `$A = \\pi r_1 r_2$`,
  parallelogramArea: `$A = bh$`,

  capsuleVolume: `$V = \\pi r^{2}(\\frac{4}{3}r + h)$`,
  coneVolume: `$V = \\frac{{Bh}}{3} = \\frac{{\\pi r^2 h}}{3}$`,
  conicalFrustrumVolume: `$V = \\frac{1}{3} \\pi h (r^{2}+rR+R^{2})$`,
  cubeVolume: `$V = x^{3}$`,
  cylinderVolume: `$V = \\pi r^{2} h$`,
  ellipsoidVolume: `$V = \\frac{4}{3} \\pi abc$`,
  rectangularTankVolume: `$V = lwh$`,
  sphereVolume: `$V = \\frac{{4\\pi r^{3}}}{3}$`,
  sphericalCapVolume: `$V = \\frac{1}{3} \\pi h^{2}(3R - h)$`,
  squarePyramidVolume: `$V = \\frac{1}{3}a^{2}h$`,
  tubeVolume: `$V = \\pi \\frac{{d_1^{2} - d_2^{2}}}{4}* l$`,

  ballSurfArea: `$SA = 4 \\pi r^{2}$`,
  capsuleSurfArea: `$SA = 4 \\pi r^{2} + 2\\pi rh$`,
  coneSurfArea_base: `$Base SA = \\pi b^{2}$`,
  coneSurfArea_lateral: `$Lateral SA = \\pi 3 \\sqrt{b^{2} + h^{2}}$`,
  coneSurfArea_total: `$Total SA = Base SA + Lateral SA$`,
  conicalFrustrumSurfArea_circular: `$Circular end SA = \\pi(R^{2}+r^{2})$`,
  conicalFrustrumSurfArea_lateral: `$Lateral SA = \\pi (R+r) \\sqrt{(R+r)^{2} + h^{2}}$`,
  conicalFrustrumSurfArea_total: `$Total SA = Circular SA + Lateral SA$`,
  cubeSurfArea: `$SA = 6a^{2}$`,
  cylinderSurfArea_base: `$Base SA = 2 \\pi r^{2}$`,
  cylinderSurfArea_lateral: `$Lateral SA = 2 \\pi h$`,
  cylinderSurfArea_total: `$Total SA = 2 \\pi r(r + h)$`,
  ellipsoidSurfArea: `$SA = 4 \\pi \\sqrt{(a^{1.6}b^{1.6} + a^{1.6}c^{1.6} + b^{1.6}c^{1.6}) / 3}$`,
  sphericalCapSurfArea: `$SA = 2 \\pi Rh$`,
  sphericalCapSurfArea_base: `$Base SA = \\pi r^{2}$`,
  sphericalCapSurfArea_totalSolidSphere: `$Total solid sphere SA = 2 \\pi Rh + \\pi r^{2}$`,
  squarePyramidSurfArea_base: `$Base SA = a^{2}$`,
  squarePyramidSurfArea_lateral: `$Lateral SA = 2a \\sqrt{(a/2)^{2} + h}$`,
  squarePyramidSurfArea_total: `$Total SA = a^{2} + 2a \\sqrt{(a/2)^{2} + h^{2}}$`,


  amortizedLoan: `$Total Repayment = P \\frac{\\frac{r}{n}(1+\\frac{r}{n})^{tn}}  {(1+\\frac{r}{n})^{tn} - 1}$`,
  bondPayback: `$$`,
  deferredPayment: `$$`,
  inflationCalc: `$$`,
  mortgagePayoffWithLoan: `$$`,
  mortgagePayoffWithoutLoan: `$$`,
  paybackACertainAmount: `$$`,
  paybackWithinTimeframe: `$$`,
  presentValue: `$$`,
  presentValueOfPeriodicalDeposit: `$$`,
  profitMargin: `$$`,
  stockTradinfMargin: `$$`,


  marginOfError: `$ε = z \\frac{S}{\\sqrt{n}}$`,
  probOfASeriesOfIndependentEvents: `$$`,
  probOfTwoEvents: `$$`,
  probSolverForTwoEvents: `$$`,
  sampleSizeCalc: `$n = z^{2}  p̂  \\frac{(1 - p̂)}{ε^{2}}$`,

  bloodAlcoholContent: `$$`,
  bmrKatch: `$BMR = 370 + 21.6(1 - F)W$`,
  bmrMifflinHarris_f: `$BMR = 9.247W + 3.098H - 4.330A + 447.593$`,
  bmrMifflinHarris_m: `$BMR = 13.397W + 4.799H - 5.677A + 88.362$`,
  bmrMifflinJoer_f: `$BMR = 10W + 6.25H - 5A - 161$`,
  bmrMifflinJoer_m: `$BMR = 10W + 6.25H - 5A + 5$`,
  bodyFatPercentage_f: `$BFP = \\frac{495}{1.29579 - 0.35004*log_10(waist+hip-neck) + 0.22100*log_10(height)} - 450$`,
  bodyFatPercentage_m: `$BFP = \\frac{495}{1.0324 - 0.19077*log_10(waist-neck) + 0.15456*log_10(height)} - 450$`,
  bmi: `$BMI = \\frac{mass(kg)}{height^{2}(m)}$`,
  bmiMethodTwo: `$PI = \\frac{mass(kg)}{height^{3}(m)}$`,
  boydFormulaBodySurfArea: `$BSA = 0.03330 * W^{0.6157 - 0.0188 * log10(W)} * H^{0.3}$`,
  circularSlab: `$$`,
  concreateSquareFooting: `$$`,
  ConductorResistor: `$$`,
  CurbAndGutterBarrier: `$$`,
  duBoisBodySurfArea: `$BSA = 0.007184 * W^{0.425} * H^{0.725}$`,
  dueDateMittendoff: `$$`,
  dueDateNaegeleRule: `$$`,
  dueDateParikh: `$$`,
  dueDateWoods: `$$`,
  elapsedTimeMethod: `$Horsepower = \\frac{weight}{(ET/5.825)^{3}}$`,
  fujimotoFormulaBodySurfArea: `$BSA = 0.008883 * W^{0.444} * H^{0.663}$`,
  gehanAndGeorgeBodySurfArea: `$BSA = 0.0235 * W^{0.51456} * H^{0.42246}$`,
  haycockBodySurfArea: `$BSA = 0.024265 * W^{0.5378} * H^{0.3964}$`,
  holeColumn: `$$`,
  horsepowerCalc: `$Horsepower = force \\frac{distance}{time}$`,
  hostingBandwidth: `$$`,
  internationalSystemBfc: `$$`,
  leanBodyMass_boer_m: `$eLBM = 0.407W + 0.267H - 19.2$`,
  leanBodyMass_boer_f: `$eLBM = 0.252W + 0.473H - 48.3$`,
  leanBodyMass_james_m: `$eLBM = 1.1W - 128(\\frac{W}{H})^{2}$`,
  leanBodyMass_james_f: `$eLBM = 1.07W - 148(\\frac{W}{H})^{2}$`,
  leanBodyMass_hume_m: `$eLBM = 0.32810W + 0.33929H - 29.5336$`,
  leanBodyMass_hume_f: `$eLBM = 0.29569W + 0.41813H - 43.2933$`,
  leanBodyMassPeterFormula_eECV: `$eECV = 0.0215 · W^{0.6469}·H^{0.7236}$`,
  leanBodyMassPeterFormula_eLBM: `$eLBM = 3.8 · eECV$`,
  mostellerBodySurfArea: `$BSA = 0.016667 * W^{0.5} * H^{0.5}$`,
  parallelResistor: `$$`,
  peroidCalc: `$$`,
  regularCycleOvulation: `$$`,
  seriesResistor: `$$`,
  slope: `$m = \\frac{Y_2 - Y_1}{X_2 - X_1} = tanθ$`,
  slopeForSingleKnownPoint: `$$`,
  slopeCalcForTwoKnownPoints_slope: `$m = \\frac{ΔY}{ΔX}$`,
  slopeCalcForTwoKnownPoints_pheta: `$θ = arctan(\\frac{ΔY}{ΔY}) = 45° = \\frac{1}{4} \\pi$`,
  slopeCalcForTwoKnownPoints_distance: `$d = \\sqrt{ΔX^{2} + ΔY^{2}}$`,
  stairsConcrete: `$$`,
  takahiraBodySurfArea: `$BSA = 0.007241 * W^{0.425} * H^{0.725}$`,
  schlichBodySurfArea_women: `$BSA = 0.000975482 * W^{0.425} * H^{0.725}$`,
  schlichBodySurfArea_men: `$BSA = 0.000579479 * W^{0.38} * H^{1.24}$`,
  trapSpeed: `$Horsepower = weight (speed/234)^{3}$`,
  usCustomarySystem: `$$`,
  websiteBandwidth: `$Bandwidth = Average page size * Average page views * 30 * Redundancy$`,
}
